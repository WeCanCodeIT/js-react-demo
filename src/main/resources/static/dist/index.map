{"version":3,"sources":["component.js","App.js","index.js"],"names":["component","template","props","elem","Object","defineProperties","value","writable","state","setState","key","hasOwnProperty","render","node","innerHTML","module","exports","require","App","i","todos","length","todo","checked","completed","item","document","querySelector","app"],"mappings":";AAAA,SAASA,EAAUC,EAAUC,EAAOC,GA0C5BF,OAvCPG,OAAOC,iBAAiBJ,EAAU,CAGjCE,KAAM,CACLG,MAAOH,EACPI,UAAU,GAIXC,MAAO,CACNF,MAAOJ,EACPK,UAAU,GAIXE,SAAU,CACTH,MAAO,SAAUJ,GAGX,IAAA,IAAIQ,KAAOR,EACXA,EAAMS,eAAeD,KACxBT,EAASO,MAAME,GAAOR,EAAMQ,IAQvBT,OAHPW,EAAOX,EAAUA,EAASE,MAGnBF,EAASE,OAKlBS,OAAQA,IAKFX,EAIR,SAASW,EAAOX,EAAUY,GACjBA,IACLA,EAAKC,UAAYb,GAGrBc,OAAOC,QAAU,CAChBhB,UAAAA;;ACpDmBiB,IAAAA,EAAAA,QAAQ,eAArBjB,EAAAA,EAAAA,UAEDkB,EACElB,EAAU,WAMZ,IAHDC,IAAAA,EAAW,GAGNkB,EAAI,EAAGA,EAAI,KAAKX,MAAMY,MAAMC,OAAQF,IAAK,CAC7CG,IAAAA,EAAO,KAAKd,MAAMY,MAAMD,GAGxBI,EAAUD,EAAKE,UAAY,UAAY,GAG3CvB,GACC,wCACoCqB,EAAKG,KAAO,KAAOF,EAAU,IAChED,EAAKG,KACN,WAIKxB,OAAAA,GAEL,CACFmB,MAAO,CACN,CACCK,KAAM,MACND,WAAW,GAEZ,CACCC,KAAM,aACND,WAAW,GAEZ,CACCC,KAAM,YACND,WAAW,KAGXE,SAASC,cAAc,SAG1BZ,OAAOC,QAAU,CAChBE,IAAAA;;AC7CeD,IAAAA,EAAAA,QAAQ,SAAhBC,EAAAA,EAAAA,IAEFU,EAAM,IAAIV,EAEhBU,EAAIhB,OAAO,KAAMc,SAASC,cAAc","file":"index.map","sourceRoot":"..\\js","sourcesContent":["function component(template, props, elem) {\r\n\r\n\t// Add properties to our template\r\n\tObject.defineProperties(template, {\r\n\r\n\t\t// Set the element to render into\r\n\t\telem: {\r\n\t\t\tvalue: elem,\r\n\t\t\twritable: true\r\n\t\t},\r\n\r\n\t\t// Add state\r\n\t\tstate: {\r\n\t\t\tvalue: props,\r\n\t\t\twritable: true\r\n\t\t},\r\n\r\n\t\t// Add the `setState()` method\r\n\t\tsetState: {\r\n\t\t\tvalue: function (props) {\r\n\r\n\t\t\t\t// Shallow merge new properties into state object\r\n\t\t\t\tfor (var key in props) {\r\n\t\t\t\t\tif (props.hasOwnProperty(key)) {\r\n\t\t\t\t\t\ttemplate.state[key] = props[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Render the element\r\n\t\t\t\trender(template, template.elem);\r\n\r\n\t\t\t\t// Return the elem for use elsewhere\r\n\t\t\t\treturn template.elem;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trender: render\r\n\r\n\t});\r\n\r\n\t// Return the template so you can assign it to a variable if desired\r\n\treturn template;\r\n\r\n};\r\n\r\nfunction render(template, node) {\r\n    if (!node) return;\r\n    node.innerHTML = template;\r\n};\r\n\r\nmodule.exports = {\r\n\tcomponent\r\n}","const {component} = require('./component')\r\n\r\nconst App = (() => {\r\n\treturn component(function () {\r\n\r\n\t// Setup our template\r\n\tvar template = '';\r\n\r\n\t// Loop through the todos\r\n\tfor (var i = 0; i < this.state.todos.length; i++) {\r\n\t\tvar todo = this.state.todos[i];\r\n\r\n\t\t// Check if it's completed\r\n\t\tvar checked = todo.completed ? 'checked' : '';\r\n\r\n\t\t// Create the todo item\r\n\t\ttemplate +=\r\n\t\t\t'<label>' +\r\n\t\t\t\t'<input type=\"checkbox\" value=\"' + todo.item + '\" ' + checked + '>' +\r\n\t\t\t\ttodo.item +\r\n\t\t\t'</label>';\r\n\t}\r\n\r\n\t// Return completed template\r\n\treturn template;\r\n\r\n}, {\r\n\ttodos: [\r\n\t\t{\r\n\t\t\titem: 'Eat',\r\n\t\t\tcompleted: false\r\n\t\t},\r\n\t\t{\r\n\t\t\titem: 'Take a nap',\r\n\t\t\tcompleted: true\r\n\t\t},\r\n\t\t{\r\n\t\t\titem: 'Eat again',\r\n\t\t\tcompleted: false\r\n\t\t}\r\n\t]\r\n}, document.querySelector('#app'))\r\n})()\r\n\r\nmodule.exports = {\r\n\tApp\r\n}","const { App } = require('./App')\r\n\r\nconst app = new App()\r\n\r\napp.render(this, document.querySelector('#app'))"]}